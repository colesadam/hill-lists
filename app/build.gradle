apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 'Google Inc.:Google APIs:17'
    buildToolsVersion "23.0.0"

    defaultConfig {
        applicationId "uk.colessoft.android.hilllist"
        minSdkVersion 15
        targetSdkVersion 22
    }

    buildTypes {
        debug {
            resValue "string", "google_maps_api_key", "0WkjGtrJFQkvRGDHGHPHmIYQWGTh48mvgixldDA"
            testCoverageEnabled true
        }
        release {
            resValue "string", "google_maps_api_key", "0WkjGtrJFQktBbukxd_AgW4VcOrha8cXTw6NjCQ"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            testCoverageEnabled true
        }
    }


    dependencies {

        compile 'com.android.support:support-v4:23.0.0'
        compile project(':hilllistcore')
        testCompile ('org.robolectric:robolectric:3.0')
        compile fileTree(dir: 'libs', include: '*.jar')
        apt 'com.google.dagger:dagger-compiler:2.0.1'
        testCompile 'com.google.dagger:dagger-compiler:2.0.1'
        compile 'com.google.dagger:dagger:2.0.1'
        provided 'org.glassfish:javax.annotation:10.0-b28'
        testCompile "org.robolectric:shadows-support-v4:3.0"

    }

    lintOptions {
        abortOnError false
        disable 'TypographyFractions','TypographyQuotes'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
    }


}

apply plugin: 'jacoco'

jacoco {
    // Use this version for upper ones are broken (with Gradle)
    // https://github.com/jacoco/jacoco/issues/288
    toolVersion = "0.7.1.201405082137"
}

// Edit covered scope if needed
// For my part I like having the coverage of both application and tests
def coverageSourceDirs = [
        '../app/src'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testUnitTestDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}
//end Jacoco config





